#!/bin/bash
set -e
: "${RUNNER_IMAGES_VERSION:?Must be provided}"

ubuntu_version="2204"
checkout_dir=/runner-images
osdir="${checkout_dir}/images/ubuntu"
scripts_dir="${checkout_dir}"/images/ubuntu/scripts/build

## ref: https://github.com/actions/runner-images/tags
## exports are used by runner-images scripts
export HELPER_SCRIPTS="${checkout_dir}"/images/ubuntu/scripts/helpers
export INSTALLER_SCRIPT_FOLDER="${checkout_dir}/imagegeneration"

git config --global advice.detachedHead false

setup() {
  if [ -d "$checkout_dir" ]; then
    return 0
  fi

  echo "Cloning actions/runner-images and setting things up..."
  git clone --branch "${RUNNER_IMAGES_VERSION}" --single-branch https://github.com/actions/runner-images "${checkout_dir}"
  mkdir -p "${INSTALLER_SCRIPT_FOLDER}" && cp "${osdir}/toolsets/toolset-${ubuntu_version}".json "${INSTALLER_SCRIPT_FOLDER}/toolset.json"
  exit 0
}

check_os() {
  if [ "$(lsb_release -cs)" != "jammy" ]; then
    >&2 echo "OS other than Ubuntu 22.04 (jammy) is not supported!"
    exit 1
  fi
}

if [[ "$*" == *"--setup"* ]]; then
  setup
fi

## --------------- Install packages (runs on ubuntu)
function invoke_tests { /bin/true; }
export -f invoke_tests

check_os
if [ ! -f /etc/apt/trusted.gpg.d/microsoft-prod.gpg ]; then
  chmod +x "${osdir}/scripts/build/install-ms-repos.sh"
  "${osdir}/scripts/build/install-ms-repos.sh"
fi

if [ $# -eq 0 ]; then
  echo "Usage: $0 package..."
  exit 1
fi

for pkg in "$@"; do
  script="${scripts_dir}/install-${pkg}.sh"
  if [ ! -f  "$script" ]; then
    >&2 echo "Package ${pkg} is not available!"
  fi
  chmod +x "${script}"
  "${script}"
done
